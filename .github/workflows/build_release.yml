name: Build Release 
on:
  push:
    tags:
      - "*"

jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: build_packages/ubuntu_2004/Dockerfile
        push: true
        tags: dsistudio/dsistudio:latest

  linux-build:
    runs-on: ubuntu-latest
    env:
      CXX: g++-9
      CFLAGS: -Werror
      QT_SELECT: qt5
    steps:
    - uses: actions/checkout@v1

    - name: install dependencies
      run: |
        sudo apt update
        sudo apt full-upgrade -y 
        sudo apt install -y --no-install-recommends libboost-all-dev zlib1g-dev ca-certificates libqt5charts5-dev libqt5opengl5-dev
        sudo apt-get clean
    - name: get TIPL
      run: |
        git clone https://github.com/frankyeh/TIPL.git
        mv TIPL tipl
    - name: build
      run: |
        mkdir -p build
        cd build
        qmake ../dsi_studio.pro
        make
    - name: packaging
      run: |
        mkdir dsi_studio_ubuntu20.04
        cp -R other/*  dsi_studio_ubuntu20.04     
        chmod 755 build/dsi_studio
        mv build/dsi_studio  dsi_studio_ubuntu20.04 
        git clone https://github.com/frankyeh/DSI-Studio-atlas.git
        rm -fr DSI-Studio-atlas/.git
        mv DSI-Studio-atlas  dsi_studio_ubuntu20.04/atlas   
        zip -r dsi_studio_ubuntu_20.04.zip  dsi_studio_ubuntu20.04 
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - name: Create Release
      uses: ncipollo/release-action@v1.8.9
      with:
        allowUpdates: true
        artifacts: "*.zip"
        tag: ${{steps.tag.outputs.tag}}
        prerelease: false  
    
  macos-build:
    runs-on: macos-latest
    env:
      CFLAGS: -Werror
    steps:
    - uses: actions/checkout@v1

    - name: install dependencies
      run: |
        brew update
        brew install qt5
        brew install boost
    - name: get TIPL
      run: |
        git clone https://github.com/frankyeh/TIPL.git
        mv TIPL tipl
    - name: build
      run: |
        mkdir -p build
        cd build
        export PATH="/usr/local/opt/qt@5/bin:$PATH" && export LDFLAGS="-L/usr/local/opt/qt@5/lib" && export CPPFLAGS="-I/usr/local/opt/qt@5/include" && export PKG_CONFIG_PATH="/usr/local/opt/qt@5/lib/pkgconfig"
        qmake ../dsi_studio.pro QMAKE_INCDIR=/usr/local/Cellar/boost/1.76.0/include
        make
        cd ..
    - name: packaging
      run: |
        mv other/* build/dsi_studio.app/Contents/MacOS/
        git clone https://github.com/frankyeh/DSI-Studio-atlas.git
        rm -fr DSI-Studio-atlas/.git
        mv DSI-Studio-atlas build/dsi_studio.app/Contents/MacOS/atlas
        mv build/dsi_studio.app .
        /usr/local/opt/qt@5/bin/macdeployqt dsi_studio.app
        zip -r dsi_studio_mac.zip  dsi_studio.app
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - name: Create Release
      uses: ncipollo/release-action@v1.8.9
      with:
        allowUpdates: true
        artifacts: "*.zip"
        tag: ${{steps.tag.outputs.tag}}
        prerelease: false

  windows_build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.12.0
        modules: qtcharts
        
    - name: Download and Install Boost
      uses: MarkusJx/install-boost@v2.0.0      
      with:
        boost_version: 1.76.0
        boost_install_dir: ${{ github.workspace }}
    - name: get TIPL and DSI Studio atlas
      run: |
        git clone https://github.com/frankyeh/TIPL.git
        git clone https://github.com/frankyeh/DSI-Studio-atlas.git
        move ${{ github.workspace }}/boost ${{ github.workspace }}/boost_
        move ${{ github.workspace }}/boost_/boost/include/boost* ${{ github.workspace }}/boost__
        move ${{ github.workspace }}/boost__/boost ${{ github.workspace }}/boost
        dir ${{ github.workspace }}/boost
        
    - name: Build DSI Studio
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        mkdir -p build
        cd build
        qmake ../dsi_studio.pro 
        nmake
      shell: cmd

    - name: Packaging
      run: |
        mkdir dsi_studio_win
        move other\color_map dsi_studio_win   
        move other\device.txt dsi_studio_win   
        move build\release\dsi_studio.exe dsi_studio_win
        windeployqt dsi_studio_win\dsi_studio.exe
        move DSI-Studio-atlas dsi_studio_win\atlas  
    - name: Zip Release
      uses: TheDoctor0/zip-release@0.6.0
      with:
        filename: dsi_studio_win.zip
        exclusions: .git
        path: dsi_studio_win
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - name: Create Release
      uses: ncipollo/release-action@v1.8.9
      with:
        allowUpdates: true
        artifacts: "*.zip"
        tag: ${{steps.tag.outputs.tag}}
        prerelease: false  
